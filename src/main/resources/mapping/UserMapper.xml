<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.scau.hjr.dao.UserMapper" >
  <resultMap id="BaseResultMap" type="cn.scau.hjr.model.User" >
    <id column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="account" property="account" jdbcType="INTEGER" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="username" property="username" jdbcType="VARCHAR" />
    <result column="register_time" property="registerTime" jdbcType="TIMESTAMP" />
    <result column="sex" property="sex" jdbcType="VARCHAR" />
    <result column="age" property="age" jdbcType="INTEGER" />
    <result column="phone" property="phone" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    user_id, account, password, username, register_time, sex, age, phone
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    from user
    where user_id = #{userId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from user
    where user_id = #{userId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="cn.scau.hjr.model.User" >
    insert into user (account, password,
      username,sex,
      age, phone)
    values (#{account,jdbcType=INTEGER}, #{password,jdbcType=VARCHAR},
      #{username,jdbcType=VARCHAR}, #{sex,jdbcType=VARCHAR},
      #{age,jdbcType=INTEGER}, #{phone,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="cn.scau.hjr.model.User" >
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="account != null" >
        account,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="username != null" >
        username,
      </if>

      <if test="sex != null" >
        sex,
      </if>
      <if test="age != null" >
        age,
      </if>
      <if test="phone != null" >
        phone,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="account != null" >
        #{account,jdbcType=INTEGER},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="registerTime != null" >
        #{registerTime,jdbcType=TIMESTAMP},
      </if>
      <if test="sex != null" >
        #{sex,jdbcType=VARCHAR},
      </if>
      <if test="age != null" >
        #{age,jdbcType=INTEGER},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.scau.hjr.model.User" >
    update user
    <set >
      <if test="account != null" >
        account = #{account,jdbcType=INTEGER},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="username != null" >
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="registerTime != null" >
        register_time = #{registerTime,jdbcType=TIMESTAMP},
      </if>
      <if test="sex != null" >
        sex = #{sex,jdbcType=VARCHAR},
      </if>
      <if test="age != null" >
        age = #{age,jdbcType=INTEGER},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=INTEGER},
      </if>
    </set>
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.scau.hjr.model.User" >
    update user
    set account = #{account,jdbcType=INTEGER},
      password = #{password,jdbcType=VARCHAR},
      username = #{username,jdbcType=VARCHAR},
      register_time = #{registerTime,jdbcType=TIMESTAMP},
      sex = #{sex,jdbcType=VARCHAR},
      age = #{age,jdbcType=INTEGER},
      phone = #{phone,jdbcType=INTEGER}
    where user_id = #{userId,jdbcType=INTEGER}
  </update>

  <select id="getUserByAccountAndPassword" parameterType="cn.scau.hjr.model.User" resultMap="BaseResultMap">
    select * from user where account=#{account} and password=#{password}
  </select>

  <!-- selectByAccount -->
  <select id="selectByAccountOrUsername" parameterType="cn.scau.hjr.model.User" resultMap="BaseResultMap">
    select * from user where account=#{account} or username=#{username}
  </select>

  <!-- 得到数据总数   -->
  <select id="getAllUserNumber"  resultType="java.lang.Integer">
    select count(*) from user
  </select>

  <!-- getAllUser -->
  <select id="getAllUser"  resultMap="BaseResultMap">
    select * from user
  </select>

  <!-- getUserListByLimitNumber   -->
  <select id="getUserListByLimitNumber"  resultMap="BaseResultMap" parameterType="java.lang.Integer">
    select * from user  limit #{start},#{pagesize}
  </select>
</mapper>