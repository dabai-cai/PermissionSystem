<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.scau.hjr.dao.UserMapper" >
  <resultMap id="BaseResultMap" type="cn.scau.hjr.model.User" >
    <id column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="account" property="account" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="username" property="username" jdbcType="VARCHAR" />
    <result column="register_time" property="registerTime" jdbcType="TIMESTAMP" />
    <result column="sex" property="sex" jdbcType="VARCHAR" />
    <result column="age" property="age" jdbcType="INTEGER" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    user_id, account, password, username, register_time, sex, age, phone
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    from user
    where user_id = #{userId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from user
    where user_id = #{userId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="cn.scau.hjr.model.User" >
    <selectKey keyProperty="userId" order="AFTER" resultType="java.lang.Integer">
      select last_insert_id()
    </selectKey>
    insert into user (account,password,
      username,sex,
      age, phone)
    values (#{account,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR},
      #{username,jdbcType=VARCHAR}, #{sex,jdbcType=VARCHAR},
      #{age,jdbcType=INTEGER}, #{phone,jdbcType=VARCHAR})
  </insert>

  <!--    <set>
        <if test="studentName!=null and studentName!='' ">
            STUDENT_TBL.STUDENT_NAME = #{studentName},
        </if>
        <if test="studentSex!=null and studentSex!='' ">
            STUDENT_TBL.STUDENT_SEX = #{studentSex},
        </if>
        <if test="studentBirthday!=null ">
            STUDENT_TBL.STUDENT_BIRTHDAY = #{studentBirthday},
        </if>
        <if test="classEntity!=null and classEntity.classID!=null and classEntity.classID!='' ">
            STUDENT_TBL.CLASS_ID = #{classEntity.classID}
        </if>
    </set>       -->
  <update id="updateByPrimaryKey" parameterType="cn.scau.hjr.model.User" >
    update user
    <set>
        password = #{password,jdbcType=VARCHAR},
        username = #{username,jdbcType=VARCHAR},
        <if test="age!=null and age!=''">
            age = #{age,jdbcType=INTEGER},
        </if>
        <if test="phone!=null and phone!=''">
            phone = #{phone,jdbcType=VARCHAR},
        </if>
        sex = #{sex,jdbcType=VARCHAR}
    </set>
    where user_id = #{userId,jdbcType=INTEGER}
  </update>

  <select id="getUserByAccountAndPassword" parameterType="cn.scau.hjr.model.User" resultMap="BaseResultMap">
    select * from user where account=#{account} and password=#{password}
  </select>

  <!-- selectByAccount -->
  <select id="selectByAccountOrUsername" parameterType="cn.scau.hjr.model.User" resultMap="BaseResultMap">
    select * from user where account=#{account} or username=#{username}
  </select>

  <!-- 得到数据总数   -->
  <select id="getAllUserNumber"  resultType="java.lang.Integer">
    select count(*) from user
  </select>

  <!-- getAllUser -->
  <select id="getAllUser"  resultMap="BaseResultMap">
  select * from user ORDER BY user_id DESC
</select>

  <!-- getUserListByLimitNumber   -->
  <select id="getUserListByLimitNumber"  resultMap="BaseResultMap" parameterType="java.lang.Integer">
    select * from user  ORDER BY user_id DESC limit #{start},#{pagesize}
  </select>

  <!--模糊查找用户    -->
  <select id="searchUser"  resultMap="BaseResultMap" >
    select * from user  where username  LIKE CONCAT(CONCAT('%', #{0}), '%')  ORDER by user_id DESC limit #{1},#{2}
  </select>

  <!---  模糊查找用户的个数   int getSearchUserCount(String key)-->
  <select id="getSearchUserCount" parameterType="java.lang.String"  resultType="java.lang.Integer">
    select count(*) from user   where username   LIKE '%${value}%'
  </select>

  <!--  User getUserByAccount(String account);-->
  <select id="getUserByAccount" parameterType="java.lang.String"  resultMap="BaseResultMap">
    select * from user  where account = #{account,jdbcType=VARCHAR}
  </select>
</mapper>